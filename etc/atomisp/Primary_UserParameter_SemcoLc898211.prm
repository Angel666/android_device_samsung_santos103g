#
#	how to read floating point comments
#
#	u : unsigned, s : signed
#	u0.16 : unsigned int (16 bit) and its number of decimals is 16
#			-> (2^16-1) means (2^16-1)/(2^16) = 0.999984....
#	u8.8  : unsigned int (16 bit) and its number of decimals is 8
#			-> (2^16-1) means (2^16-1)/(2^8) = 255.996093....
#	s0.15 : signed int (16bit) and the 1-th MSB is sign bit and the number of decimals is 15
#			-> (2^15 + x) means -(x/(2^15))
#	uint8 : unsigned int (8 bit, 0 <= range <= 2^8-1)
#	uint16 : unsigned int (16 bit, 0 <= range <= 2^16-1)
#	boolean : value which can take value only 0 or 1
#
muiWbGainSf	1	# uint16
muiWbGainTblGr	32768	# u[muiWbGainSf].[16-muiWbGainSf]
muiWbGainTblRr	32768	# u[muiWbGainSf].[16-muiWbGainSf]
muiWbGainTblBb	32768	# u[muiWbGainSf].[16-muiWbGainSf]
muiWbGainTblGb	32768	# u[muiWbGainSf].[16-muiWbGainSf]
muiAecYcoefR	25559	# u0.16
muiAecYcoefG	32768	# u0.16
muiAecYcoefB	7209	# u0.16
# AWB level gate for raw: if 'pixel <= High', pixel can pass level gate
muiAwbLgHighRaw	64880	# u0.16
# AWB level gate: if 'Low <= pixel <= High', pixel can pass level gate
muiAwbLgLow	650	# u0.16
muiAwbLgHigh	64880	# u0.16
#msiAfcFir1	-6689,-12207,-32768,32767,12207,6689,0	# s0.15
#msiAfcFir2	2053,0,-18437,32767,-18437,2053,0	# s0.15
msiAfcFir1	-579,-3232,-7680,22982,-7680,-3232,-579	#s0.15
msiAfcFir2	1027,0,-9219,16384,-9219,1027,0		# s0.15
muiDePixelNoise	0	# u0.16
# msqMorTbl - Only for pre-integration test
msqMorTbl	/etc/atomisp/Mor_8MP_8BQ.txt
muiCcSft	2	# uint16
muiCsSft	0	# uint16
msiCcMtx	18055,-10503,639,-2691,14313,-3430,-663,-6043,14898		# s[muiCcSft].[15-muiCcSft]
msiCsMtx	9798,19235,3736,-5529,-10855,16384,16384,-13720,-2664	# s[muiCcSft].[15-muiCcSft]
msiStMaccMtx	5552,1858,0,6480,5434,2093,-1046,8572,7182,345,-689,8215,7872,0,1983,6879,7601,0,-1445,6879,10231,1315,-2629,6287,11692,2776,-1387,7529,9006,-2597,0,10303,9006,-87,0,8964,10547,-3169,1586,5792,6102,1276,-2550,9928,8654,0,1564,7871,7793,0,154,7871,7035,-379,760,8174,5037,-2377,1187,8601,5552,-1348,0,6227
muiUVLevelMin	0	# uint8
muiUVLevelMax	255	# uint8
muiCeAuto	0	# boolean
muiCeGain	/etc/atomisp/CGamma_DIS5MP.bin	# uint16 in bin file
muiGmVal	384	# u8.8
muiGmToe	123	# u0.16
muiGmKne	287	# u0.16
muiGmDyr	256	# u8.8
muiGmLevelMin	0	# uint8
muiGmLevelMax	255	# uint8
muiGmTbl	/etc/atomisp/YGamma_DIS5MP.bin	# uint16 in bin file
muiYuvGmGainK1	19000	# u0.16
muiYuvGmGainK2	19000	# u0.16
mblObMode	1,1,1,1,1	# boolean
muiObBLGr	2688,2688,2688,2688,2688	# u0.16
muiObBLRr	2688,2688,2688,2688,2688	# u0.16
muiObBLBb	2688,2688,2688,2688,2688	# u0.16
muiObBLGb	2688,2688,2688,2688,2688	# u0.16
muiObSttp	0,0,0,0,0	# uint16
muiObEndp	0,0,0,0,0	# uint16
muiDpThres	8192,8192,8192,8192,8192	# u0.16
muiDpGain	4096,4096,3072,2048,2048	# u8.8
muiBNrGain	10240,14336,20480,26624,32768	# u0.16
muiYNrGain	10240,14336,20480,26624,32768	# u0.16
muiNrDir	512,1536,2560,3584,4608		# u0.16
muiNrThCb	128,128,128,128,128		# u0.16
muiNrThCr	128,128,128,128,128		# u0.16
muiEeGain	11264,9216,7168,6656,6144	# u5.11
muiEeNois	256,320,448,512,576		# u8.8
muiEeDetl	2048,2048,2048,2048,2048	# u5.11
muiTrGain	24576,24576,24576,24576,24576	# u0.16
muiTrThrY	1536,1536,1536,1536,1536	# u0.16
muiTrThrUV	2048,2048,2048,2048,2048	# u0.16
muiXrThrs	4096,6144,8192,12288,16384	# u0.16
muiWbGainWR	1024
muiWbGainWG	1024
muiWbGainWB	1024
